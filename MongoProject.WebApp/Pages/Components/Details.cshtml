@page
@model DetailsModel
@{
    ViewData["Title"] = "Component Details";
}

<h1 class="text-center">Details</h1>

<h4 class="text-center">Component</h4>
<hr />
<div class="d-flex justify-content-center">
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Component.Id)
        </dt>
        <dd class="col-sm-10 text-center">
            @Html.DisplayFor(model => model.Component.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Component.Name)
        </dt>
        <dd class="col-sm-10 text-center">
            @Html.DisplayFor(model => model.Component.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Component.Type)
        </dt>
        <dd class="col-sm-10 text-center">
            @Html.DisplayFor(model => model.Component.Type)
        </dd>

        @if (Model.Component.Type == ComponentType.BLDCMotor)
        {
            var component = Model.Component as BLDCMotor;

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.RPMV)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.RPMV)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Shaftdiameter)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Shaftdiameter)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Voltagerating)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Voltagerating)
            </dd>
        }

        @if (Model.Component.Type == ComponentType.Bolt)
        {
            var component = Model.Component as Bolt;

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Size)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Size)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Length)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Length)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Head)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Head)
            </dd>
        }

        @if (Model.Component.Type == ComponentType.Microcontroller)
        {
            var component = Model.Component as Microcontroller;

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Processor)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Processor)
            </dd>
        }

        @if (Model.Component.Type == ComponentType.Propeller)
        {
            var component = Model.Component as Propeller;

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.NoBlades)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.NoBlades)
            </dd>
        }

        @if (Model.Component.Type == ComponentType.StepperMotor)
        {
            var component = Model.Component as StepperMotor;

            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Size)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Size)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Currentrating)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Currentrating)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Holdingtorque)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Holdingtorque)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Shaftdiameter)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Shaftdiameter)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.SPR)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.SPR)
            </dd>
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => component.Voltagerating)
            </dt>
            <dd class="col-sm-10 text-center">
                @Html.DisplayFor(model => component.Voltagerating)
            </dd>
        }

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Component.Quantity)
        </dt>
        <dd class="col-sm-10 text-center">
            @Html.DisplayFor(model => model.Component.Quantity)
        </dd>
    </dl>
</div>
<div class="text-center">
    <a class="btn btn-success mr-3" asp-page="./Edit" asp-route-id="@Model.Component.Id" asp-route-type="@Model.Component.Type">Edit</a>
    <a class="btn btn-danger mr-3" asp-page="./Delete" asp-route-id="@Model.Component.Id" asp-route-type="@Model.Component.Type">Delete</a>
    <a class="btn btn-primary mr-3" asp-page="./Index">Back to List</a>
</div>